package denemeyedevam;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.imageio.IIOException;
import javax.imageio.ImageIO;
import javax.servlet.ServletException;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Enumeration;

import org.eclipse.jetty.server.Server;
import org.eclipse.jetty.server.Request;
import org.eclipse.jetty.server.handler.AbstractHandler;

public class HelloWorld extends AbstractHandler {
	private static int IMG_WIDTH = 500;
	private static boolean is_IMG_WIDTH_received = false;
	private static int IMG_HEIGHT = 500;
	private static boolean is_IMG_HEIGHT_received = false;
	private static String IMG_COLOR = "DEFAULT";
	private static boolean is_IMG_COLOR_received = false;
	private static boolean is_IMG_UNKNOWN_received = false;
	boolean hata_var_mý = false;
	String images_folder_path = "C:\\Users\\MehmetAkif-PC\\Google Drive\\Google Foto\\bihap\\";
	String image_name = "anime_girl_12-wallpaper-2560x1440.jpg";

	// BufferedImage createResizedCopy()
	private static BufferedImage resizeImage(BufferedImage originalImage, int type) {
		BufferedImage resizedImage = new BufferedImage(IMG_WIDTH, IMG_HEIGHT, type);
		Graphics2D g = resizedImage.createGraphics();
		g.drawImage(originalImage, 0, 0, IMG_WIDTH, IMG_HEIGHT, null);
		g.dispose();

		return resizedImage;
	}

	public void handle(String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)
			throws IOException, ServletException {
		response.setContentType("text/html;charset=utf-8");
		// response.getOutputStream().println("<h1>Bismillahirrahmanirrahim</h1>");
		Enumeration<String> parameterNames = request.getParameterNames();
		while (parameterNames.hasMoreElements()) {

			String name = (String) parameterNames.nextElement();
			String value = request.getParameter(name).toString();
			// response.getWriter().write(String.format("%s==%s\n",name,value));
			System.out.println(String.format("%s==%s\n", name, value));
			if (name.startsWith("width")) {
				IMG_WIDTH = Integer.parseInt(request.getParameter(name));
				if (IMG_WIDTH > 0) {
					is_IMG_WIDTH_received = true;
					System.out.println("geniþlik:" + IMG_WIDTH);
					continue;
				} else {
					hata_var_mý = true;
					response.setStatus(HttpServletResponse.SC_REQUESTED_RANGE_NOT_SATISFIABLE);
					baseRequest.setHandled(false);
					return;
				}
				// response.getWriter().println("geniþlik:"+width);
			} else {
				if (name.startsWith("height")) {
					IMG_HEIGHT = Integer.parseInt(request.getParameter(name));
					if (IMG_HEIGHT > 0) {
						is_IMG_HEIGHT_received = true;
						System.out.println("yükseklik:" + IMG_HEIGHT);
						continue;
					} else {
						hata_var_mý = true;
						response.setStatus(HttpServletResponse.SC_REQUESTED_RANGE_NOT_SATISFIABLE);
						baseRequest.setHandled(false);
						return;
					}
					// response.getWriter().println("geniþlik:"+width);
				} else {
					if (name.startsWith("color")) {
						setIMG_COLOR(request.getParameter(name));
						if (IMG_COLOR.startsWith("GRAY")) {
							is_IMG_COLOR_received = true;
							System.out.println("renk:" + IMG_COLOR);
							continue;
						} else {
							hata_var_mý = true;
							is_IMG_UNKNOWN_received = true;
							response.setStatus(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
							baseRequest.setHandled(false);
							return;
						}
						// response.getWriter().println("geniþlik:"+width);
					} else {
						hata_var_mý = true;
						System.out.println("bilinmeyen paramatre");
						response.setStatus(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
						baseRequest.setHandled(false);
						return;
					}
				}
			}
		}
		if (hata_var_mý == false) {
			if (is_IMG_WIDTH_received) {
				if (is_IMG_HEIGHT_received) {
					if (is_IMG_COLOR_received) {
						//Scale & Color Transformation
						// is_IMG_WIDTH_received=true;
						// is_IMG_HEIGHT_received=true;
						// is_IMG_COLOR_received=true;
						
					} else {
						//Scale Transformation
						// is_IMG_WIDTH_received=true;
						// is_IMG_HEIGHT_received=true;
						// is_IMG_COLOR_received=false;
					}
				} else {
					if (is_IMG_COLOR_received) {
						hata_var_mý = true;
						// is_IMG_WIDTH_received=true;
						// is_IMG_HEIGHT_received=false;
						// is_IMG_COLOR_received=true;
					} else {
						hata_var_mý = true;
						// is_IMG_WIDTH_received=true;
						// is_IMG_HEIGHT_received=false;
						// is_IMG_COLOR_received=false;
					}
				}
			} else {
				if (is_IMG_HEIGHT_received) {
					if (is_IMG_COLOR_received) {
						hata_var_mý = true;
						// is_IMG_WIDTH_received=false;
						// is_IMG_HEIGHT_received=true;
						// is_IMG_COLOR_received=true;
					} else {
						hata_var_mý = true;
						// is_IMG_WIDTH_received=false;
						// is_IMG_HEIGHT_received=true;
						// is_IMG_COLOR_received=false;
					}
				} else {
					if (is_IMG_COLOR_received) {
						//Color Transformation
						// is_IMG_WIDTH_received=false;
						// is_IMG_HEIGHT_received=false;
						// is_IMG_COLOR_received=true;
					} else {
						hata_var_mý = true;
						// is_IMG_WIDTH_received=false;
						// is_IMG_HEIGHT_received=false;
						// is_IMG_COLOR_received=false;
					}
				}
			}

		} else {
			response.setStatus(HttpServletResponse.SC_METHOD_NOT_ALLOWED);
			baseRequest.setHandled(false);
			return;
		}
		BufferedImage originalImage = null;
		try {
			originalImage = ImageIO.read(new File("" + images_folder_path + image_name));
		} catch (IIOException e) {
			hata_var_mý = true;
			e.printStackTrace();
		}
		if (hata_var_mý == false) {
			response.setHeader("Content-Type", "image/jpg");// or png or gif, etc
			int type = originalImage.getType() == 0 ? BufferedImage.TYPE_INT_ARGB : originalImage.getType();
			originalImage = resizeImage(originalImage, type);
			ImageIO.write(originalImage, "jpg", response.getOutputStream());

			// }
			// }
			baseRequest.setHandled(true);
			// response.getOutputStream().close();
			// response.sendRedirect("http://www.google.com");
			// response.getWriter().println("<h1>Bismillahirrahmanirrahim</h1>");
			response.setStatus(HttpServletResponse.SC_OK);
		} else {
			response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);
			baseRequest.setHandled(false);
		}
	}

	public static void main(String[] args) throws Exception {
		int port=8080;
		Server server = new Server(port);
		server.setHandler(new HelloWorld());
		server.start();
		server.join();
	}

	/**
	 * @return the iMG_COLOR
	 */
	public static String getIMG_COLOR() {
		return IMG_COLOR;
	}

	/**
	 * @param iMG_COLOR
	 *            the iMG_COLOR to set
	 */
	public static void setIMG_COLOR(String iMG_COLOR) {
		IMG_COLOR = iMG_COLOR;
	}

	/**
	 * @return the is_IMG_WIDTH_received
	 */
	public static boolean isIs_IMG_WIDTH_received() {
		return is_IMG_WIDTH_received;
	}

	/**
	 * @param is_IMG_WIDTH_received
	 *            the is_IMG_WIDTH_received to set
	 */
	public static void setIs_IMG_WIDTH_received(boolean is_IMG_WIDTH_received) {
		HelloWorld.is_IMG_WIDTH_received = is_IMG_WIDTH_received;
	}

	/**
	 * @return the is_IMG_HEIGHT_received
	 */
	public static boolean isIs_IMG_HEIGHT_received() {
		return is_IMG_HEIGHT_received;
	}

	/**
	 * @param is_IMG_HEIGHT_received
	 *            the is_IMG_HEIGHT_received to set
	 */
	public static void setIs_IMG_HEIGHT_received(boolean is_IMG_HEIGHT_received) {
		HelloWorld.is_IMG_HEIGHT_received = is_IMG_HEIGHT_received;
	}

	/**
	 * @return the is_IMG_COLOR_received
	 */
	public static boolean isIs_IMG_COLOR_received() {
		return is_IMG_COLOR_received;
	}

	/**
	 * @param is_IMG_COLOR_received
	 *            the is_IMG_COLOR_received to set
	 */
	public static void setIs_IMG_COLOR_received(boolean is_IMG_COLOR_received) {
		HelloWorld.is_IMG_COLOR_received = is_IMG_COLOR_received;
	}

	/**
	 * @return the is_IMG_UNKNOWN_received
	 */
	public static boolean isIs_IMG_UNKNOWN_received() {
		return is_IMG_UNKNOWN_received;
	}

	/**
	 * @param is_IMG_UNKNOWN_received
	 *            the is_IMG_UNKNOWN_received to set
	 */
	public static void setIs_IMG_UNKNOWN_received(boolean is_IMG_UNKNOWN_received) {
		HelloWorld.is_IMG_UNKNOWN_received = is_IMG_UNKNOWN_received;
	}
}